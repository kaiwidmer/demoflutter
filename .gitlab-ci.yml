stages:
    - build
    - containerize
    - deploy

variables:
  FLUTTER_VERSION: "https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.9.1+hotfix.2-stable.tar.xz"
  CONTAINER_IMAGE: kaiiiiii/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}

build:
  image: openjdk:8-jdk
  stage: build
  script:
    - apt-get --quiet update --yes  
    - apt-get --quiet install --yes wget tar unzip
    - wget --output-document=flutter-sdk.tar.xz ${FLUTTER_VERSION}
    - tar -xf flutter-sdk.tar.xz  
    - export PATH=$PATH:$PWD/flutter/bin
    - flutter channel master
    - flutter upgrade
    - flutter config --enable-web
    - flutter create .
    - flutter build web
  artifacts:
    paths:
      - build/web

containerize:
  image: docker:latest
  services:
  - docker:dind
  stage: containerize
  tags:
    - docker
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker push ${CONTAINER_IMAGE}

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<IMAGENAME>/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}/g" deployment.yaml
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml